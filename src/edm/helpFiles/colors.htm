<head>
<base>
<title>Colors</title>
<link REL="STYLESHEET" HREF="style.css">
</head>

<body bgcolor=#E0E0E0>

<h1>Colors</h1>
Colors for EDM displays are specified in "colors.list".
The default location is /etc but may be overridden with
the environment variable EDMFILES.

<h2>RGB Values, Indices and Names</h2>
Most widgets have more than one color: foreground, background,
border, shadow, ... There are several ways to address such a color:

<UL>
<LI><B>RGB</B><br>
    The triple of RGB values, that is the intensity of red, green and blue,
    defines what a color actually looks like on the screen.
    Each intensity is an integer from 0 up to a configurable limit,
    e.g. 255.
<LI><B>Name</B><br>
    A string for the color. This name can be based on the meaning
    of the color, e.g. "background=RGB(0, 0, 255)" or describe how
    the color looks as in "red=RGB(255, 0, 0)".
    Note that noone prevents you from calling the RGB(255, 0, 0)
    "green": For EDM, the color name is an arbitrary string.
<LI><B>Palette, Index</B><br>
    EDM puts all the defined colors into a palette. The colors in
    there are indexed beginning with zero.
</UL>

The colors.list file defines the palette, the relationship between
names, indices and actual RGB values.
Originally, all widgets stored the palette <I>index</I> in the display
file. Some widgets do now store the <I>name</I> in the display file.

<h2>Syntax for "colors.list"</h2>
Example colors.list for version 3.0.0:
<pre>
3 0 0

# The first line has to be a version number:
#   &lt;Major version&gt; &lt;Minor version&gt; &lt;Release&gt;
# No comments are allowed before that first line

# blank lines or comments after "#" allowed
# decimal or hex numbers are allowed

# Number to use for maximum RGB intensity
max=256     # for 8 bit, use max=0x10000 for 16 bit

columns=10  # number of columns for color palette

# Static colors:
# "static" name { R G B }
#
# The first color has index 0, the second color
# has index 1 and so on
static black { 0 0 0 }
static white { 0xff, 0xff, 0xff } # commas are optional
static "lt grey" { 240 240 240 }  # if name has whitespace, must quote
static "lt wheat" { 240 240 210 }
static red { 255 0 0 }            # index 4
static green { 0 255 0 }          # index 5
</pre>

When configuring a widget, the color can be selected by name or
picked from a dialog displaying the whole color palette.<br>

Note: Since many widgets save the color as an index, care must be taken
when rearranging the color file.
 
<h3>Color Rules</h3>
Color rules may follow the static color definitions:
<pre>
rule Rainbow
{
  &lt;0        : red
  &gt;0        : green
  default   : black
}
</pre>

This color will change, depending on the <I>Color Value</I>,
from green for positive value over black for zero into red for
negative values. The <I>Color Value</I> is provided by the
widget. For most widgets it will be the current value of the readback
or control PV, some widgets might allow for a separate "Color PV" that
can be different from the main PV.
<p>
Another example:
<pre>
# Rule entries can be exact values,
# comparisons and boolean combinations.
# Conditions to be joined to enhance readability:
rule rule1 {    # comment
  11            : ||
  12            : ||
  13            : red
  14            : blue
  15            : green
  &lt;2 || &gt;4      : &&
  &lt;7 || &gt;9      : forest
  default       : black
}                
</pre>


<h3>Alarms</h3>
Some widgets have an "alarm" checkbox, they reflect the alarm state of
the PV via colors, configured like this:

<pre>
alarm { 
  disconnected : "Disconn/Invalid"
  invalid      : "Disconn/Invalid"
  minor        : "Monitor: MINOR"
  major        : "Monitor: MAJOR"
  noalarm      : "Monitor: NORMAL"
 }
</pre>

The specification for the no alarm state may either be a valid color
name or "*". In the latter case, the object's foreground color determine the non-alarm color.

<h3>Menu Map</h3>
Per default, all static and rule-based colors are displayed in
a list box, ordered by appearance in colors.list.
This syntax allows for displaying a limited subset in a specific order:
<pre>
menumap {
  black
  "light grey"
  red
  forest
  "blink green"
}
</pre>

If this option is used, all color names must be explicitly included in the
list (if they are to appear in the menu).

<h3>API</h3>
Refer to lib/color_pkg.h.

<hr>
<address>
<a HREF="mailto:sinclair@mail.phy.ornl.gov"> sinclair@mail.phy.ornl.gov</a>,
<a HREF="mailto:kasemir@lanl.gov"> kasemir@lanl.gov</a>
</address>
</body>
</html>




